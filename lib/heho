import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';
import 'package:chewie/chewie.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';


void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Scroll and Shorts App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: HomePage(), // Set the ConnectPage as the initial page
    );
  }
}


class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  String? _selectedCity;
  List<String> _cities = [
    'Casablanca',
    'Rabat',
    'Fes',
    'Marrakech',
    'Tangier',
    'Meknes',
    // Add more cities here
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Select Your City'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            DropdownButton<String>(
              hint: Text('Select a city'),
              value: _selectedCity,
              onChanged: (String? newValue) {
                setState(() {
                  _selectedCity = newValue;
                });
              },
              items: _cities.map<DropdownMenuItem<String>>((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
            ),
            ElevatedButton(
              onPressed: _onConnect,
              child: Text('Connect'),
            ),
          ],
        ),
      ),
    );
  }

  Future<void> _onConnect() async {
    if (_selectedCity != null) {
      // Save the selected city, for example, using shared_preferences package
      // or pass it as an argument to the ScrollShortsPage constructor

      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => ScrollShortsPage()),
      );
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please select a city')),
      );
    }
  }
}


class ScrollShortsPage extends StatefulWidget {
  @override
  _ScrollShortsPageState createState() => _ScrollShortsPageState();
}

class _ScrollShortsPageState extends State<ScrollShortsPage> {
  List<Map<String, String>> shorts = [
    {
      'videoUrl': 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4',
      'caption': 'Video 1'
    },
    {
      'videoUrl': 'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file.mp4',
      'caption': 'Video 2'
    },
    // Add more videos here...
  ];

  List<VideoPlayerController> _controllers = [];

  @override
  void initState() {
    super.initState();
    shorts.forEach((short) async {
      VideoPlayerController controller = VideoPlayerController.network(short['videoUrl']!);
      _controllers.add(controller);
      await controller.initialize();
      setState(() {});
    });
  }

  @override
  void dispose() {
    _controllers.forEach((controller) => controller.dispose());
    super.dispose();
  }


 @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: PageView.builder(
        scrollDirection: Axis.vertical,
        itemBuilder: (context, index) {
          return Stack(
            fit: StackFit.expand,
            children: [
              GestureDetector(
                onTap: () {
                  setState(() {
                    _controllers[index].value.isPlaying
                        ? _controllers[index].pause()
                        : _controllers[index].play();
                  });
                },
                child: FittedBox(
                  fit: BoxFit.cover,
                  child: SizedBox(
                    width: _controllers[index].value.size.width,
                    height: _controllers[index].value.size.height,
                    child: VideoPlayer(_controllers[index]),
                  ),
                ),
              ),
              if (!_controllers[index].value.isPlaying)
                Icon(Icons.play_circle_outline, size: 50, color: Colors.white),
              Positioned(
                bottom: 16.0,
                left: 16.0,
                right: 16.0,
                child: Text(
                  shorts[index]['caption']!,
                  style: TextStyle(fontSize: 24, color: Colors.white),
                ),
              ),
              Positioned(
                right: 10,
                bottom: 30,
                child: _VideoControls(),
              ),
            ],
          );
        },
        itemCount: shorts.length,
      ),
    );
  }
}
  
class _VideoControls extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 48.0),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        IconButton(
          icon: Icon(Icons.comment),
          onPressed: () {
            // Handle comments
          },
        ),
        IconButton(
          icon: Icon(Icons.phone),
          onPressed: () {
            // Handle contacting the agent
          },
        ),
        IconButton(
          icon: Icon(Icons.map),
          onPressed: () {
            // Handle map view
          },
        ),
        IconButton(
          icon: Icon(Icons.favorite_border),
          onPressed: () {
            // Handle saving property
          },
        ),
        IconButton(
          icon: Icon(Icons.info_outline),
          onPressed: () {
            // Handle property details
          },
        ),
      ],
      ),
    );
  }
}
